clcclear allload wine.data.txtRHO = [30, 0.9];MY = [0.1, 0.01];iterations = [10^3, 2*10^4];tau = 300;color = {'ro', 'go', 'bo'};nbrWines = length(wine_data);nbr_w= 20*20;%initialize weightsw = zeros(nbr_w, 13);%create coordinatescoord = zeros(nbr_w, 2);for i = 1:20    for j = 1:20        coord( (i-1)*20 + j,:) = [i,j];    endend%normalize datafor i = 2:14    wine_data(:,i) = (wine_data(:,i) - mean(wine_data(:,i)))/std(wine_data(:,i));enddist_weights = zeros(nbr_w, 1);dist_wines = zeros(1,nbrWines);for phase = 1:2    phase        T = iterations(phase);    my_tmp = MY(phase);    rho_tmp = RHO(phase);        for n_it = 1:T        if( phase == 2 )            my = my_tmp;            rho = rho_tmp;        else            my = my_tmp*exp(-n_it/tau);            rho = rho_tmp*exp(-n_it/tau);        end                %draw random pattern and find closest w        index = ceil(rand(1)*nbrWines);        for i = 1:nbr_w            dist_weights(i) = sqrt( sum((wine_data(index,2:end)-w(i,:)).^2) );        end        [~, min_i] = min(dist_weights);                %update weights        for i = 1:nbr_w            w(i,:) = w(i,:) + my* exp(-sum( (coord(min_i,:) - coord(i,:)).^2 )/(2*rho^2)) *(wine_data(index,2:end) - w(i,:));        end        %         if (mod(n_it, 100) == 0)%             hold off%             for i = 1:nbr_w%                 for j = 1:nbrWines%                     dist_wines(j) = sqrt( sum((wine_data(j,2:end)-w(i,:)).^2) );%                 end%                 [~, min_i] = min(dist_wines);%                 plot(coord(i,1), coord(i,2), color{wine_data(min_i, 1)});%                 hold on%             end%             drawnow%         end    endend%%% clc% clear all% load task2.matclose allfigure(1)for i = 1:nbr_w    for j = 1:nbrWines        dist_wines(j) = sqrt( sum((wine_data(j,2:end)-w(i,:)).^2) );    end    [~, min_i] = min(dist_wines);    plot(coord(i,1), coord(i,2), color{wine_data(min_i, 1)});    title('classify each weight')    hold onenddrawnowfigure(2)for i = 1:nbrWines    for j = 1:nbr_w        dist_weights(j) = sqrt( sum((wine_data(i,2:end)-w(j,:)).^2) );    end    [~, min_i] = min(dist_weights);    plot(coord(min_i,1), coord(min_i,2), color{wine_data(i, 1)});    title('weights closest to wine')    hold onend